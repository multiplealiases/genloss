#!/usr/bin/env bash

function help_text() {
cat << EOF
$(banner)
$(usage)

Options:
 -n, --number         number of iterations (default 2500)
 -u, --upper-quality  upper bound of JPEG quality (default 100)
 -l, --lower-quality  lower bound of JPEG quality (default 60)
 -h, --help           display this help text
 -f, --format         image format used (default jpeg)
EOF
}

function banner() {
echo Induce generation loss on images by saving at random qualities
}


function usage() {
printf 'Usage: %s [options] filename\n' "$(basename "$0")"
}

function invoke_help() {
printf 'Invoke '\''%s --help'\'' for further help.\n' "$(basename "$0")"
}


ARGS=$(getopt --options n:,u:,l:,q:,f:,h --long number:,upper-quality:,lower-quality:,help,format: -- "$@")
eval set -- "$ARGS"
while true; do
		case "$1" in
		-n | --number)
			iterations="$2"
			shift 2
			;;
		-u | --upper-quality)
			upper_quality="$2"
			shift 2
			;;
		-l | --lower-quality)
			lower_quality="$2"
			shift 2
			;;
		-h | --help)
			help_text
			exit 127
			;;
		-f | --format)
			image_format="$2"
			shift 2
			;;
		--)
			set +o nounset
			if [[ -z "$2" ]]; then usage; invoke_help; exit 1 ; fi
			set -o nounset
			filepath="$2"
			break
			;;
		*)
			printf 'What is '\''%s'\''?' "$@"
			exit 1
			break
	esac
done

image_format="${image_format-jpeg}"
lower_quality="${lower_quality-60}"
upper_quality="${upper_quality-100}"
iterations="${iterations-500}"

filename="$(basename "$filepath")"
base_filename="${filename%.*}"
output_prefix="${output_prefix:-$base_filename}"-ql"$lower_quality"-qh"$upper_quality"

cp "$filepath" "$output_prefix"-0."$image_format"
trap 'rm "$output_prefix"-0."$image_format"; exit' ERR EXIT

for i in $(seq 0 $((iterations - 1)) ) 
do
    current="$output_prefix"-"$i"
    next="$output_prefix"-"$((i + 1))"
    quality="$(shuf -i "$lower_quality"-"$upper_quality" -n 1 --random-source /dev/random)"
    echo $quality
    
    convert "$current"."$image_format" miff:- | \
    convert miff:- -quality "$quality" "$next"."$image_format"
done

rm "$output_prefix"-0."$image_format"
